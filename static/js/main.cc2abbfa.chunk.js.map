{"version":3,"sources":["FormTodo.jsx","Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormTodo","_ref","addTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","Form","onSubmit","e","preventDefault","Group","Label","Control","type","className","onChange","target","placeholder","Button","variant","Todo","todo","index","markTodo","removeTodo","style","textDecoration","isDone","text","onCLick","onClick","App","done","todos","setTodos","newTodos","toConsumableArray","splice","src_FormTodo","concat","map","Card","Body","src_Todo","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cc2abbfa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Form } from \"react-bootstrap\";\r\nfunction FormTodo({ addTodo }) {\r\n    const [value, setValue] = React.useState('')\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(!value) return;\r\n        addTodo(value)\r\n        setValue(\"\")\r\n    }\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    <b>Add Todo</b>\r\n                </Form.Label>\r\n                <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder={\"Add new todo\"} />\r\n                <Button variant=\"primary mb-3\" type=\"submit\">\r\n                SUBMIT\r\n                </Button>\r\n            </Form.Group>\r\n           \r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default FormTodo;","import React from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nfunction Todo({ todo, index, markTodo, removeTodo }) {\r\n    return (\r\n        <div className=\"todo\">\r\n            <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\"}}>{todo.text}</span>\r\n            <div>\r\n                <Button variant=\"outline-success\" onCLick={()=> markTodo(index)}>✓</Button>  {' '}\r\n                <Button variant=\"outline-danger\" onClick={()=> removeTodo(index)}>✕</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\nimport \"./App.css\";\nimport { Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FormTodo from \"./FormTodo.jsx\";\nimport Todo from \"./Todo.jsx\";\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is a sample todo\",\n      done: false,\n    },\n  ]);\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n  const markTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n  const removeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <hi className=\"text-center mb-4\">Simple Todo List</hi>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                  key={index}\n                  index={index}\n                  todo={todo}\n                  markTodo={markTodo}\n                  removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}