{"version":3,"sources":["FormTodo.jsx","Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormTodo","_ref","addTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","Form","onSubmit","e","preventDefault","Group","Label","Control","type","className","onChange","target","placeholder","Button","variant","Todo","todo","index","markTodo","removeTodo","style","textDecoration","isDone","text","onClick","App","done","todos","setTodos","newTodos","toConsumableArray","splice","src_FormTodo","concat","map","Card","Body","src_Todo","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.53f325e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Form } from \"react-bootstrap\";\r\nfunction FormTodo({ addTodo }) {\r\n    const [value, setValue] = React.useState('')\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(!value) return;\r\n        addTodo(value)\r\n        setValue(\"\")\r\n    }\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    <b>Add Todo</b>\r\n                </Form.Label>\r\n                <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder={\"Add new todo\"} />\r\n                <Button variant=\"primary mb-3\" type=\"submit\">\r\n                SUBMIT\r\n                </Button>\r\n            </Form.Group>\r\n           \r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default FormTodo;","import React from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nfunction Todo({ todo, index, markTodo, removeTodo }) {\r\n    return (\r\n    <div\r\n      className=\"todo\"\r\n\r\n    >\r\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\r\n      <div>\r\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\r\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport FormTodo from \"./FormTodo.jsx\";\r\nimport Todo from \"./Todo.jsx\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = React.useState([\r\n    {\r\n      text: \"This is a sample todo\",\r\n      done: false,\r\n    },\r\n  ]);\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos, { text }];\r\n    setTodos(newTodos);\r\n  };\r\n  const markTodo = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].isDone = true;\r\n    setTodos(newTodos);\r\n  };\r\n  const removeTodo = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <hi className=\"text-center mb-4\">Simple Todo List</hi>\r\n        <FormTodo addTodo={addTodo} />\r\n        <div>\r\n          {todos.map((todo, index) => (\r\n            <Card>\r\n              <Card.Body>\r\n                <Todo\r\n                  key={index}\r\n                  index={index}\r\n                  todo={todo}\r\n                  markTodo={markTodo}\r\n                  removeTodo={removeTodo}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}